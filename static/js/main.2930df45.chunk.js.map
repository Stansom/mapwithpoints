{"version":3,"sources":["components/pointsListItem.tsx","components/pointsList.tsx","components/mapElement.tsx","components/modalWindow.tsx","components/inputForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["h6Style","PointsItem","placemark","deletePointHandler","index","draggableId","id","provided","ref","innerRef","draggableProps","dragHandleProps","className","lat","toFixed","lon","onClick","PointsList","handleDrag","placemarks","onDragEnd","droppableId","droppableProps","map","placeholder","MapStyle","MapElement","pathDots","defaultCenterOfMap","handlePlacemarkDrag","length","state","center","zoom","modules","geometry","properties","balloonContent","iconContent","options","draggable","hasBalloon","hideIconOnBalloonOpen","openBalloonOnClick","ev","balloonCloseButton","strokeColor","strokeWidth","strokeOpacity","defaultState","ModalWindow","InputForm","handleFormSubmit","inputRef","useRef","useState","isNumber","setIsNumber","currentInputValue","action","onSubmit","htmlFor","type","autoComplete","onChange","current","inputValue","value","isNaN","Number","replace","handleInputChange","App","setPlacemarks","setPathDots","style","zIndex","top","event","placemarksCopy","Array","from","updatedPlacemark","splice","cr","preventDefault","coordinatesArray","split","latToNumber","longToNumber","height","item","destination","items","source","deletedItem","filteredPlacemarks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2930df45.chunk.js","sourcesContent":["import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { pointsListItemPropsType } from '../appTypes';\n\nconst liStyle = `row w-100 mt-1 align-items-center`;\nconst h5Style = `col-3 text-start px-3`;\nconst h6Style = `col-3 text-start px-0`;\nconst buttonStyle = `btn btn-outline-danger btn-sm col-3`;\n\nexport const PointsItem = ({\n\tplacemark,\n\tdeletePointHandler,\n\tindex,\n}: pointsListItemPropsType) => {\n\treturn (\n\t\t<Draggable key={placemark.id} draggableId={'' + placemark.id} index={index}>\n\t\t\t{(provided) => (\n\t\t\t\t<div\n\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t>\n\t\t\t\t\t<li className={liStyle}>\n\t\t\t\t\t\t<h5 className={h5Style}>Point #{placemark.id + 1}</h5>\n\t\t\t\t\t\t<h6 className={h6Style}>Latitude: {placemark.lat.toFixed(4)}</h6>\n\t\t\t\t\t\t<h6 className={h6Style}>Longitude: {placemark.lon.toFixed(4)}</h6>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={buttonStyle}\n\t\t\t\t\t\t\tonClick={() => deletePointHandler(placemark)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDELETE\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</li>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Draggable>\n\t);\n};\n","import React from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { pointsListPropsType } from '../appTypes';\nimport { PointsItem } from './pointsListItem';\n\nconst listStyle = `list-unstyled align-self-start px-2 w-100`;\n\nexport const PointsList = ({\n\thandleDrag,\n\tplacemarks,\n\tdeletePointHandler,\n}: pointsListPropsType) => {\n\treturn (\n\t\t<DragDropContext onDragEnd={handleDrag}>\n\t\t\t<Droppable droppableId=\"placemarks\">\n\t\t\t\t{(provided) => (\n\t\t\t\t\t<div {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t<ul className={listStyle}>\n\t\t\t\t\t\t\t{placemarks.map((placemark, index) => (\n\t\t\t\t\t\t\t\t<PointsItem\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\tkey={placemark.id}\n\t\t\t\t\t\t\t\t\tplacemark={placemark}\n\t\t\t\t\t\t\t\t\tdeletePointHandler={deletePointHandler}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Droppable>\n\t\t</DragDropContext>\n\t);\n};\n","import React from 'react';\nimport { YMaps, Map, Placemark, Polyline } from 'react-yandex-maps';\nimport { MapProps } from '../appTypes';\n\nconst MapStyle = `\nmap-container w-100 h-50 align-self-center\n`;\n\nexport const MapElement = ({\n\tplacemarks,\n\tpathDots,\n\tdefaultCenterOfMap,\n\thandlePlacemarkDrag,\n}: MapProps) => {\n\treturn (\n\t\t<YMaps>\n\t\t\t{placemarks.length > 0 ? (\n\t\t\t\t<Map\n\t\t\t\t\tclassName={MapStyle}\n\t\t\t\t\tstate={{\n\t\t\t\t\t\tcenter: [\n\t\t\t\t\t\t\tplacemarks[placemarks.length - 1].lat,\n\t\t\t\t\t\t\tplacemarks[placemarks.length - 1].lon,\n\t\t\t\t\t\t],\n\t\t\t\t\t\tzoom: 9,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{/* PLACEMARKS */}\n\t\t\t\t\t{placemarks &&\n\t\t\t\t\t\tplacemarks.map((placemark) => (\n\t\t\t\t\t\t\t<div key={placemark.id}>\n\t\t\t\t\t\t\t\t<Placemark\n\t\t\t\t\t\t\t\t\tmodules={['geoObject.addon.balloon']}\n\t\t\t\t\t\t\t\t\tgeometry={[placemark.lat, placemark.lon]}\n\t\t\t\t\t\t\t\t\tproperties={{\n\t\t\t\t\t\t\t\t\t\tballoonContent: `Latitude: ${placemark.lat.toFixed(4)}\n\t\t\t\t\t\t\t\t\t\tLongitude: ${placemark.lon.toFixed(4)}`,\n\t\t\t\t\t\t\t\t\t\ticonContent: `${placemark.id + 1}`,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\t\t\t\thasBalloon: true,\n\t\t\t\t\t\t\t\t\t\thideIconOnBalloonOpen: false,\n\t\t\t\t\t\t\t\t\t\topenBalloonOnClick: true,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonDragEnd={(ev: any) => handlePlacemarkDrag(ev, placemark)}\n\t\t\t\t\t\t\t\t></Placemark>\n\t\t\t\t\t\t\t\t{pathDots.length > 1 && (\n\t\t\t\t\t\t\t\t\t<Polyline\n\t\t\t\t\t\t\t\t\t\tgeometry={pathDots}\n\t\t\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\t\t\tballoonCloseButton: false,\n\t\t\t\t\t\t\t\t\t\t\tstrokeColor: '#000',\n\t\t\t\t\t\t\t\t\t\t\tstrokeWidth: 4,\n\t\t\t\t\t\t\t\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Polyline>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t</Map>\n\t\t\t) : (\n\t\t\t\t<Map\n\t\t\t\t\tclassName={MapStyle}\n\t\t\t\t\tdefaultState={{\n\t\t\t\t\t\tcenter: [defaultCenterOfMap.lat, defaultCenterOfMap.lon],\n\t\t\t\t\t\tzoom: 9,\n\t\t\t\t\t}}\n\t\t\t\t></Map>\n\t\t\t)}\n\t\t</YMaps>\n\t);\n};\n","import React from 'react';\n\nconst modalStyle = `\nh-5 text-danger position-relative align-self-center border border-2 border-danger`;\n\nexport const ModalWindow = () => {\n\treturn <div className={modalStyle}>Enter numbers please</div>;\n};\n","import React, { useRef, useState } from 'react';\nimport { InputFormType } from '../appTypes';\nimport { ModalWindow } from './modalWindow';\n\nconst inputFormStyle = `mb-3 p-2`;\n\nexport const InputForm = ({\n\thandleFormSubmit,\n}: // setIsNumber,\n// inputRef,\n// handleInputChange,\nInputFormType) => {\n\tconst inputRef = useRef<HTMLInputElement>(null);\n\tconst [isNumber, setIsNumber] = useState(true);\n\tlet currentInputValue = '';\n\n\tfunction handleInputChange(setIsNumber: Function) {\n\t\tif (inputRef.current) {\n\t\t\tconst inputValue = inputRef.current.value;\n\t\t\tif (isNaN(Number(inputValue.replace(/\\s/gi, '')))) {\n\t\t\t\tsetIsNumber(false);\n\t\t\t\tinputRef.current.value = '';\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetIsNumber(true);\n\n\t\t\tcurrentInputValue = inputValue;\n\t\t}\n\t}\n\n\treturn (\n\t\t<form\n\t\t\taction=\"\"\n\t\t\tonSubmit={(ev) => handleFormSubmit(ev, inputRef, currentInputValue)}\n\t\t>\n\t\t\t<div className={inputFormStyle}>\n\t\t\t\t<label htmlFor=\"coordinatesInput\" className=\"form-label\">\n\t\t\t\t\t<h2>Enter points:</h2>\n\t\t\t\t</label>\n\t\t\t\t{!isNumber ? <ModalWindow /> : ''}\n\n\t\t\t\t<input\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tid=\"coordinatesInput\"\n\t\t\t\t\tplaceholder=\"enter coordinates here (latitude and longitude)\"\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tonChange={() => handleInputChange(setIsNumber)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { placemarkType } from './appTypes';\nimport { PointsList } from './components/pointsList';\nimport { MapElement } from './components/mapElement';\nimport { InputForm } from './components/inputForm';\n\nconst appStyle = `App container-sm d-flex p-2 flex-column vh-100 vw-100 justify-content-center`;\nconst h2Style = `text-center text-white bg-primary bg-gradient border border-0 rounded w-30 p-2 align-self-center position-absolute`;\nconst inputDivStyle = `border border-2 rounded w-100 h-50 mt-1 d-flex flex-column`;\nconst hrStyle = `w-75 align-self-center mt-0 mb-2 text-gray`;\n\nfunction App() {\n\tconst defaultCenterOfMap: placemarkType = {\n\t\tid: 0,\n\t\tlat: 53.2038,\n\t\tlon: 50.1606,\n\t};\n\tconst [placemarks, setPlacemarks] = useState<placemarkType[]>([]);\n\tconst [pathDots, setPathDots] = useState<number[][]>([]);\n\n\tfunction handleFormSubmit(\n\t\tevent: React.FormEvent<HTMLFormElement>,\n\t\tinputRef: React.RefObject<HTMLInputElement>,\n\t\tcurrentInputValue: string\n\t) {\n\t\tevent.preventDefault();\n\t\tif (inputRef.current && currentInputValue) {\n\t\t\tconst coordinatesArray = currentInputValue.split(' ').splice(0, 2);\n\t\t\tif (coordinatesArray[0] && coordinatesArray[1]) {\n\t\t\t\tconst latToNumber = Number(coordinatesArray[0]);\n\t\t\t\tconst longToNumber = Number(coordinatesArray[1]);\n\t\t\t\tsetPlacemarks([\n\t\t\t\t\t...placemarks,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: placemarks.length++,\n\t\t\t\t\t\tlat: latToNumber,\n\t\t\t\t\t\tlon: longToNumber,\n\t\t\t\t\t},\n\t\t\t\t]);\n\t\t\t\tsetPathDots([...pathDots, [latToNumber, longToNumber]]);\n\t\t\t}\n\t\t\tinputRef.current.value = '';\n\t\t}\n\t}\n\n\tfunction deletePointHandler(placemark: placemarkType) {\n\t\tconst filteredPlacemarks = placemarks.filter(\n\t\t\t(current) => current.id !== placemark.id\n\t\t);\n\t\tsetPlacemarks(filteredPlacemarks);\n\t\tsetPathDots(filteredPlacemarks.map((cr) => [cr.lat, cr.lon]));\n\t}\n\n\tfunction handleDrag(item: any) {\n\t\tif (!item.destination) return;\n\t\tconst items = Array.from(placemarks);\n\t\tconst [deletedItem] = items.splice(item.source.index, 1);\n\t\titems.splice(item.destination.index, 0, deletedItem);\n\t\tsetPlacemarks(items);\n\t}\n\n\tfunction handlePlacemarkDrag(event: any, placemark: placemarkType) {\n\t\tconst [lat, lon] =\n\t\t\tevent['originalEvent']['target']['geometry']['_coordinates'];\n\t\tconst placemarksCopy = Array.from(placemarks);\n\t\tconst updatedPlacemark = {\n\t\t\tid: placemark.id,\n\t\t\tlat,\n\t\t\tlon,\n\t\t};\n\n\t\tplacemarksCopy.splice(placemark.id, 1, updatedPlacemark);\n\n\t\tsetPlacemarks(placemarksCopy);\n\t\tsetPathDots(placemarksCopy.map((cr) => [cr.lat, cr.lon]));\n\t}\n\n\treturn (\n\t\t<div className={appStyle}>\n\t\t\t<h2 className={h2Style} style={{ zIndex: '3', top: '8px' }}>\n\t\t\t\tRoutes Editor\n\t\t\t</h2>\n\t\t\t<MapElement\n\t\t\t\tplacemarks={placemarks}\n\t\t\t\tpathDots={pathDots}\n\t\t\t\tdefaultCenterOfMap={defaultCenterOfMap}\n\t\t\t\thandlePlacemarkDrag={handlePlacemarkDrag}\n\t\t\t/>\n\n\t\t\t{/* INPUT FORM */}\n\t\t\t<div className={inputDivStyle}>\n\t\t\t\t<InputForm handleFormSubmit={handleFormSubmit} />\n\n\t\t\t\t{/* POINTS LIST */}\n\t\t\t\t<hr className={hrStyle} style={{ height: '2px' }} />\n\t\t\t\t{placemarks && (\n\t\t\t\t\t<PointsList\n\t\t\t\t\t\thandleDrag={handleDrag}\n\t\t\t\t\t\tplacemarks={placemarks}\n\t\t\t\t\t\tdeletePointHandler={deletePointHandler}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}